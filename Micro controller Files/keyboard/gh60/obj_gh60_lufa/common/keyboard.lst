   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_setup,"ax",@progbits
  11               	.global	keyboard_setup
  13               	keyboard_setup:
  14               	.LFB4:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../../tmk_core/common/keyboard.c **** #endif
  37:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../tmk_core/common/keyboard.c **** #endif
  40:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../../tmk_core/common/keyboard.c **** #endif
  43:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../../tmk_core/common/keyboard.c **** #endif
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** 
  48:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../../tmk_core/common/keyboard.c **** {
  51:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../../tmk_core/common/keyboard.c ****         return false;
  55:../../tmk_core/common/keyboard.c **** 
  56:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../../tmk_core/common/keyboard.c ****             return true;
  60:../../tmk_core/common/keyboard.c ****     }
  61:../../tmk_core/common/keyboard.c ****     return false;
  62:../../tmk_core/common/keyboard.c **** }
  63:../../tmk_core/common/keyboard.c **** #endif
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** 
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  16               		.loc 1 67 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  22               		.loc 1 68 0
  23 0000 0C94 0000 		jmp matrix_setup
  24               	.LVL0:
  25               		.cfi_endproc
  26               	.LFE4:
  28               		.section	.text.keyboard_init,"ax",@progbits
  29               	.global	keyboard_init
  31               	keyboard_init:
  32               	.LFB5:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  33               		.loc 1 72 0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  39               		.loc 1 73 0
  40 0000 0E94 0000 		call timer_init
  41               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  42               		.loc 1 74 0
  43 0004 0E94 0000 		call matrix_init
  44               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  45               		.loc 1 87 0
  46 0008 0C94 0000 		jmp bootmagic
  47               	.LVL3:
  48               		.cfi_endproc
  49               	.LFE5:
  51               		.section	.text.keyboard_task,"ax",@progbits
  52               	.global	keyboard_task
  54               	keyboard_task:
  55               	.LFB6:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan matrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
  56               		.loc 1 100 0
  57               		.cfi_startproc
  58 0000 2F92      		push r2
  59               	.LCFI0:
  60               		.cfi_def_cfa_offset 3
  61               		.cfi_offset 2, -2
  62 0002 3F92      		push r3
  63               	.LCFI1:
  64               		.cfi_def_cfa_offset 4
  65               		.cfi_offset 3, -3
  66 0004 4F92      		push r4
  67               	.LCFI2:
  68               		.cfi_def_cfa_offset 5
  69               		.cfi_offset 4, -4
  70 0006 5F92      		push r5
  71               	.LCFI3:
  72               		.cfi_def_cfa_offset 6
  73               		.cfi_offset 5, -5
  74 0008 6F92      		push r6
  75               	.LCFI4:
  76               		.cfi_def_cfa_offset 7
  77               		.cfi_offset 6, -6
  78 000a 7F92      		push r7
  79               	.LCFI5:
  80               		.cfi_def_cfa_offset 8
  81               		.cfi_offset 7, -7
  82 000c 8F92      		push r8
  83               	.LCFI6:
  84               		.cfi_def_cfa_offset 9
  85               		.cfi_offset 8, -8
  86 000e 9F92      		push r9
  87               	.LCFI7:
  88               		.cfi_def_cfa_offset 10
  89               		.cfi_offset 9, -9
  90 0010 AF92      		push r10
  91               	.LCFI8:
  92               		.cfi_def_cfa_offset 11
  93               		.cfi_offset 10, -10
  94 0012 BF92      		push r11
  95               	.LCFI9:
  96               		.cfi_def_cfa_offset 12
  97               		.cfi_offset 11, -11
  98 0014 CF92      		push r12
  99               	.LCFI10:
 100               		.cfi_def_cfa_offset 13
 101               		.cfi_offset 12, -12
 102 0016 DF92      		push r13
 103               	.LCFI11:
 104               		.cfi_def_cfa_offset 14
 105               		.cfi_offset 13, -13
 106 0018 EF92      		push r14
 107               	.LCFI12:
 108               		.cfi_def_cfa_offset 15
 109               		.cfi_offset 14, -14
 110 001a FF92      		push r15
 111               	.LCFI13:
 112               		.cfi_def_cfa_offset 16
 113               		.cfi_offset 15, -15
 114 001c 0F93      		push r16
 115               	.LCFI14:
 116               		.cfi_def_cfa_offset 17
 117               		.cfi_offset 16, -16
 118 001e 1F93      		push r17
 119               	.LCFI15:
 120               		.cfi_def_cfa_offset 18
 121               		.cfi_offset 17, -17
 122 0020 CF93      		push r28
 123               	.LCFI16:
 124               		.cfi_def_cfa_offset 19
 125               		.cfi_offset 28, -18
 126 0022 DF93      		push r29
 127               	.LCFI17:
 128               		.cfi_def_cfa_offset 20
 129               		.cfi_offset 29, -19
 130 0024 00D0      		rcall .
 131 0026 00D0      		rcall .
 132 0028 1F92      		push __zero_reg__
 133               	.LCFI18:
 134               		.cfi_def_cfa_offset 25
 135 002a CDB7      		in r28,__SP_L__
 136 002c DEB7      		in r29,__SP_H__
 137               	.LCFI19:
 138               		.cfi_def_cfa_register 28
 139               	/* prologue: function */
 140               	/* frame size = 5 */
 141               	/* stack size = 23 */
 142               	.L__stack_usage = 23
 143               	.LVL4:
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 144               		.loc 1 109 0
 145 002e 0E94 0000 		call matrix_scan
 146               	.LVL5:
 147 0032 00E0      		ldi r16,lo8(matrix_prev.2382)
 148 0034 10E0      		ldi r17,hi8(matrix_prev.2382)
 149               	.LBB2:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 150               		.loc 1 110 0
 151 0036 312C      		mov r3,__zero_reg__
 152               	.LVL6:
 153               	.L12:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 154               		.loc 1 111 0
 155 0038 832D      		mov r24,r3
 156 003a 0E94 0000 		call matrix_get_row
 157               	.LVL7:
 158 003e 2B01      		movw r4,r22
 159 0040 3C01      		movw r6,r24
 160               	.LVL8:
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 161               		.loc 1 112 0
 162 0042 F801      		movw r30,r16
 163 0044 8080      		ld r8,Z
 164 0046 9180      		ldd r9,Z+1
 165 0048 A280      		ldd r10,Z+2
 166 004a B380      		ldd r11,Z+3
 167 004c 8626      		eor r8,r22
 168 004e 9726      		eor r9,r23
 169 0050 A826      		eor r10,r24
 170 0052 B926      		eor r11,r25
 171               	.LVL9:
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 172               		.loc 1 113 0
 173 0054 8114      		cp r8,__zero_reg__
 174 0056 9104      		cpc r9,__zero_reg__
 175 0058 A104      		cpc r10,__zero_reg__
 176 005a B104      		cpc r11,__zero_reg__
 177 005c 01F4      		brne .L4
 178               	.L10:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 179               		.loc 1 110 0
 180 005e 3394      		inc r3
 181               	.LVL10:
 182 0060 0C5F      		subi r16,-4
 183 0062 1F4F      		sbci r17,-1
 184 0064 F5E0      		ldi r31,lo8(5)
 185 0066 3F12      		cpse r3,r31
 186 0068 00C0      		rjmp .L12
 187 006a 00C0      		rjmp .L32
 188               	.L4:
 189               	.LBB3:
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 190               		.loc 1 128 0
 191 006c 8091 0000 		lds r24,debug_config
 192 0070 81FD      		sbrc r24,1
 193               		.loc 1 128 0 is_stmt 0 discriminator 1
 194 0072 0E94 0000 		call matrix_print
 195               	.LVL11:
 196               	.L7:
 197               	.LBE3:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 198               		.loc 1 110 0 is_stmt 1 discriminator 1
 199 0076 212C      		mov r2,__zero_reg__
 200 0078 C12C      		mov r12,__zero_reg__
 201 007a D12C      		mov r13,__zero_reg__
 202 007c 7601      		movw r14,r12
 203 007e C394      		inc r12
 204               	.LVL12:
 205               	.L11:
 206               	.LBB6:
 207               	.LBB4:
 129:../../tmk_core/common/keyboard.c ****             matrix_row_t col_mask = 1;
 130:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 131:../../tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 208               		.loc 1 131 0
 209 0080 D701      		movw r26,r14
 210 0082 C601      		movw r24,r12
 211 0084 8821      		and r24,r8
 212 0086 9921      		and r25,r9
 213 0088 AA21      		and r26,r10
 214 008a BB21      		and r27,r11
 215 008c 892B      		or r24,r25
 216 008e 8A2B      		or r24,r26
 217 0090 8B2B      		or r24,r27
 218 0092 01F0      		breq .L8
 219               	.LBB5:
 132:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 220               		.loc 1 132 0
 221 0094 2982      		std Y+1,r2
 222 0096 3A82      		std Y+2,r3
 133:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 134:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & col_mask),
 223               		.loc 1 134 0
 224 0098 21E0      		ldi r18,lo8(1)
 225 009a D701      		movw r26,r14
 226 009c C601      		movw r24,r12
 227 009e 8421      		and r24,r4
 228 00a0 9521      		and r25,r5
 229 00a2 A621      		and r26,r6
 230 00a4 B721      		and r27,r7
 231 00a6 892B      		or r24,r25
 232 00a8 8A2B      		or r24,r26
 233 00aa 8B2B      		or r24,r27
 234 00ac 01F4      		brne .L9
 235 00ae 20E0      		ldi r18,0
 236               	.L9:
 132:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 237               		.loc 1 132 0
 238 00b0 2B83      		std Y+3,r18
 135:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 239               		.loc 1 135 0
 240 00b2 0E94 0000 		call timer_read
 241               	.LVL13:
 242 00b6 8160      		ori r24,1
 132:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 243               		.loc 1 132 0
 244 00b8 782F      		mov r23,r24
 245 00ba 9D83      		std Y+5,r25
 246 00bc 8C83      		std Y+4,r24
 136:../../tmk_core/common/keyboard.c ****                     };
 137:../../tmk_core/common/keyboard.c ****                     action_exec(e);
 247               		.loc 1 137 0
 248 00be 4981      		ldd r20,Y+1
 249 00c0 5A81      		ldd r21,Y+2
 250 00c2 6B81      		ldd r22,Y+3
 251 00c4 8D81      		ldd r24,Y+5
 252 00c6 0E94 0000 		call action_exec
 253               	.LVL14:
 138:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 254               		.loc 1 138 0
 255 00ca 4981      		ldd r20,Y+1
 256 00cc 5A81      		ldd r21,Y+2
 257 00ce 6B81      		ldd r22,Y+3
 258 00d0 7C81      		ldd r23,Y+4
 259 00d2 8D81      		ldd r24,Y+5
 260 00d4 0E94 0000 		call hook_matrix_change
 261               	.LVL15:
 139:../../tmk_core/common/keyboard.c ****                     // record a processed key
 140:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= col_mask;
 262               		.loc 1 140 0
 263 00d8 F801      		movw r30,r16
 264 00da 8081      		ld r24,Z
 265 00dc 9181      		ldd r25,Z+1
 266 00de A281      		ldd r26,Z+2
 267 00e0 B381      		ldd r27,Z+3
 268 00e2 8C25      		eor r24,r12
 269 00e4 9D25      		eor r25,r13
 270 00e6 AE25      		eor r26,r14
 271 00e8 BF25      		eor r27,r15
 272 00ea 8083      		st Z,r24
 273 00ec 9183      		std Z+1,r25
 274 00ee A283      		std Z+2,r26
 275 00f0 B383      		std Z+3,r27
 276               	.L8:
 277               	.LBE5:
 130:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 278               		.loc 1 130 0
 279 00f2 2394      		inc r2
 280               	.LVL16:
 281 00f4 CC0C      		lsl r12
 282 00f6 DD1C      		rol r13
 283 00f8 EE1C      		rol r14
 284 00fa FF1C      		rol r15
 285               	.LVL17:
 286 00fc F3E1      		ldi r31,lo8(19)
 287 00fe 2F12      		cpse r2,r31
 288 0100 00C0      		rjmp .L11
 289 0102 00C0      		rjmp .L10
 290               	.LVL18:
 291               	.L32:
 292               	.LBE4:
 293               	.LBE6:
 294               	.LBE2:
 141:../../tmk_core/common/keyboard.c **** 
 142:../../tmk_core/common/keyboard.c ****                     // This can miss stroke when scan matrix takes long like Topre
 143:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 144:../../tmk_core/common/keyboard.c ****                     //goto MATRIX_LOOP_END;
 145:../../tmk_core/common/keyboard.c ****                 }
 146:../../tmk_core/common/keyboard.c ****             }
 147:../../tmk_core/common/keyboard.c ****         }
 148:../../tmk_core/common/keyboard.c ****     }
 149:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 150:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 295               		.loc 1 150 0
 296 0104 8FEF      		ldi r24,lo8(-1)
 297 0106 8983      		std Y+1,r24
 298 0108 8A83      		std Y+2,r24
 299 010a 1B82      		std Y+3,__zero_reg__
 300 010c 0E94 0000 		call timer_read
 301               	.LVL19:
 302 0110 8160      		ori r24,1
 303 0112 782F      		mov r23,r24
 304 0114 9D83      		std Y+5,r25
 305 0116 8C83      		std Y+4,r24
 306 0118 4981      		ldd r20,Y+1
 307 011a 5A81      		ldd r21,Y+2
 308 011c 6B81      		ldd r22,Y+3
 309 011e 8D81      		ldd r24,Y+5
 310 0120 0E94 0000 		call action_exec
 311               	.LVL20:
 151:../../tmk_core/common/keyboard.c **** 
 152:../../tmk_core/common/keyboard.c **** //MATRIX_LOOP_END:
 153:../../tmk_core/common/keyboard.c **** 
 154:../../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 312               		.loc 1 154 0
 313 0124 0E94 0000 		call hook_keyboard_loop
 314               	.LVL21:
 155:../../tmk_core/common/keyboard.c **** 
 156:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 157:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 158:../../tmk_core/common/keyboard.c ****     mousekey_task();
 315               		.loc 1 158 0
 316 0128 0E94 0000 		call mousekey_task
 317               	.LVL22:
 159:../../tmk_core/common/keyboard.c **** #endif
 160:../../tmk_core/common/keyboard.c **** 
 161:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 162:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 163:../../tmk_core/common/keyboard.c **** #endif
 164:../../tmk_core/common/keyboard.c **** 
 165:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 166:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 167:../../tmk_core/common/keyboard.c **** #endif
 168:../../tmk_core/common/keyboard.c **** 
 169:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 170:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 171:../../tmk_core/common/keyboard.c **** #endif
 172:../../tmk_core/common/keyboard.c **** 
 173:../../tmk_core/common/keyboard.c ****     // update LED
 174:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 318               		.loc 1 174 0
 319 012c 1091 0000 		lds r17,led_status.2383
 320 0130 0E94 0000 		call host_keyboard_leds
 321               	.LVL23:
 322 0134 1817      		cp r17,r24
 323 0136 01F0      		breq .L3
 175:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 324               		.loc 1 175 0
 325 0138 0E94 0000 		call host_keyboard_leds
 326               	.LVL24:
 327 013c 8093 0000 		sts led_status.2383,r24
 176:../../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 328               		.loc 1 176 0
 329 0140 9091 0000 		lds r25,debug_config
 330 0144 92FF      		sbrs r25,2
 331 0146 00C0      		rjmp .L14
 332               		.loc 1 176 0 is_stmt 0 discriminator 1
 333 0148 90FF      		sbrs r25,0
 334 014a 00C0      		rjmp .L14
 335 014c 1F92      		push __zero_reg__
 336 014e 8F93      		push r24
 337 0150 80E0      		ldi r24,lo8(__c.2400)
 338 0152 90E0      		ldi r25,hi8(__c.2400)
 339 0154 9F93      		push r25
 340 0156 8F93      		push r24
 341 0158 0E94 0000 		call __xprintf
 342               	.LVL25:
 343 015c 0F90      		pop __tmp_reg__
 344 015e 0F90      		pop __tmp_reg__
 345 0160 0F90      		pop __tmp_reg__
 346 0162 0F90      		pop __tmp_reg__
 347               	.L14:
 177:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 348               		.loc 1 177 0 is_stmt 1
 349 0164 8091 0000 		lds r24,led_status.2383
 350               	/* epilogue start */
 178:../../tmk_core/common/keyboard.c ****     }
 179:../../tmk_core/common/keyboard.c **** }
 351               		.loc 1 179 0
 352 0168 0F90      		pop __tmp_reg__
 353 016a 0F90      		pop __tmp_reg__
 354 016c 0F90      		pop __tmp_reg__
 355 016e 0F90      		pop __tmp_reg__
 356 0170 0F90      		pop __tmp_reg__
 357 0172 DF91      		pop r29
 358 0174 CF91      		pop r28
 359 0176 1F91      		pop r17
 360 0178 0F91      		pop r16
 361 017a FF90      		pop r15
 362 017c EF90      		pop r14
 363 017e DF90      		pop r13
 364 0180 CF90      		pop r12
 365 0182 BF90      		pop r11
 366 0184 AF90      		pop r10
 367 0186 9F90      		pop r9
 368 0188 8F90      		pop r8
 369               	.LVL26:
 370 018a 7F90      		pop r7
 371 018c 6F90      		pop r6
 372 018e 5F90      		pop r5
 373 0190 4F90      		pop r4
 374               	.LVL27:
 375 0192 3F90      		pop r3
 376               	.LVL28:
 377 0194 2F90      		pop r2
 177:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 378               		.loc 1 177 0
 379 0196 0C94 0000 		jmp hook_keyboard_leds_change
 380               	.LVL29:
 381               	.L3:
 382               	/* epilogue start */
 383               		.loc 1 179 0
 384 019a 0F90      		pop __tmp_reg__
 385 019c 0F90      		pop __tmp_reg__
 386 019e 0F90      		pop __tmp_reg__
 387 01a0 0F90      		pop __tmp_reg__
 388 01a2 0F90      		pop __tmp_reg__
 389 01a4 DF91      		pop r29
 390 01a6 CF91      		pop r28
 391 01a8 1F91      		pop r17
 392 01aa 0F91      		pop r16
 393 01ac FF90      		pop r15
 394 01ae EF90      		pop r14
 395 01b0 DF90      		pop r13
 396 01b2 CF90      		pop r12
 397 01b4 BF90      		pop r11
 398 01b6 AF90      		pop r10
 399 01b8 9F90      		pop r9
 400 01ba 8F90      		pop r8
 401               	.LVL30:
 402 01bc 7F90      		pop r7
 403 01be 6F90      		pop r6
 404 01c0 5F90      		pop r5
 405 01c2 4F90      		pop r4
 406               	.LVL31:
 407 01c4 3F90      		pop r3
 408               	.LVL32:
 409 01c6 2F90      		pop r2
 410 01c8 0895      		ret
 411               		.cfi_endproc
 412               	.LFE6:
 414               		.section	.text.keyboard_set_leds,"ax",@progbits
 415               	.global	keyboard_set_leds
 417               	keyboard_set_leds:
 418               	.LFB7:
 180:../../tmk_core/common/keyboard.c **** 
 181:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 182:../../tmk_core/common/keyboard.c **** {
 419               		.loc 1 182 0
 420               		.cfi_startproc
 421               	.LVL33:
 422               	/* prologue: function */
 423               	/* frame size = 0 */
 424               	/* stack size = 0 */
 425               	.L__stack_usage = 0
 183:../../tmk_core/common/keyboard.c ****     led_set(leds);
 426               		.loc 1 183 0
 427 0000 0C94 0000 		jmp led_set
 428               	.LVL34:
 429               		.cfi_endproc
 430               	.LFE7:
 432               		.section	.progmem.data.__c.2400,"a",@progbits
 435               	__c.2400:
 436 0000 4C45 443A 		.string	"LED: %02X\n"
 436      2025 3032 
 436      580A 00
 437               		.section	.bss.led_status.2383,"aw",@nobits
 440               	led_status.2383:
 441 0000 00        		.zero	1
 442               		.section	.bss.matrix_prev.2382,"aw",@nobits
 445               	matrix_prev.2382:
 446 0000 0000 0000 		.zero	20
 446      0000 0000 
 446      0000 0000 
 446      0000 0000 
 446      0000 0000 
 447               		.text
 448               	.Letext0:
 449               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 450               		.file 3 "../../tmk_core/common/keyboard.h"
 451               		.file 4 "../../tmk_core/common/matrix.h"
 452               		.file 5 "../../tmk_core/common/debug.h"
 453               		.file 6 "../../tmk_core/common/timer.h"
 454               		.file 7 "../../tmk_core/common/bootmagic.h"
 455               		.file 8 "../../tmk_core/common/action.h"
 456               		.file 9 "../../tmk_core/common/hook.h"
 457               		.file 10 "../../tmk_core/common/mousekey.h"
 458               		.file 11 "../../tmk_core/common/host.h"
 459               		.file 12 "../../tmk_core/common/avr/xprintf.h"
 460               		.file 13 "../../tmk_core/common/led.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:2      *ABS*:0000003e __SP_H__
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:3      *ABS*:0000003d __SP_L__
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:4      *ABS*:0000003f __SREG__
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:6      *ABS*:00000001 __zero_reg__
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:13     .text.keyboard_setup:00000000 keyboard_setup
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:31     .text.keyboard_init:00000000 keyboard_init
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:54     .text.keyboard_task:00000000 keyboard_task
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:445    .bss.matrix_prev.2382:00000000 matrix_prev.2382
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:440    .bss.led_status.2383:00000000 led_status.2383
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:435    .progmem.data.__c.2400:00000000 __c.2400
/var/folders/2c/rrkkt_h56k12nc1l5n57svw00000gn/T//ccG85Yk0.s:417    .text.keyboard_set_leds:00000000 keyboard_set_leds

UNDEFINED SYMBOLS
matrix_setup
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
hook_matrix_change
hook_keyboard_loop
mousekey_task
host_keyboard_leds
__xprintf
hook_keyboard_leds_change
led_set
__do_clear_bss
